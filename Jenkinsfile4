#!/usr/bin/env groovy

pipeline {
environment {
def mvnHome = tool 'M3'
   }
    agent any 
    stages {
        stage('Build') { 
            steps {
    git 'https://github.com/codaglobal/ansible-demo.git'
    sh '''
    mvn -f ./sample-app/middleware/FamousQuotes/pom.xml clean install
    cd ./sample-app/frontend/frontend
    npm install
    npm run-script build''' 
            }
        }
        stage('Upload') { 
            steps {
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'AWS', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) 
       {
        sh '''
        export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
        export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
        aws s3 sync  ./sample-app/frontend/frontend/dist/frontend s3://webinar-jenkins/frontend
        aws s3 sync ./sample-app/nginx/ s3://webinar-jenkins
        aws s3 cp ./sample-app/middleware/FamousQuotes/target/FamousQuotes-1.0-SNAPSHOT.war s3://webinar-jenkins
        aws s3 cp ./sample-app/database/famous-qoutes-schema-setup-5.7.sql s3://webinar-jenkins'''
        }        
            }
        }
        stage('Deploy') { 
            steps {
            ansiblePlaybook become: true, disableHostKeyChecking: true, inventory: '/home/ubuntu/webinar/hosts', playbook: '/home/ubuntu/webinar/deployment.yml', vaultCredentialsId: 'Ansible'
            }
        }
        stage('Test'){
           steps{
    ansiblePlaybook become: true, disableHostKeyChecking: true, inventory: '/home/ubuntu/webinar/hosts', playbook: '/home/ubuntu/webinar/url.yml'
           }
        }
        }
}
